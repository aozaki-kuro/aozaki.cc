on:
  push:
    branches:
      - master
      - dev/**

jobs:
  publish:
    runs-on: self-hosted
    permissions:
      contents: read
      deployments: write

    name: Publish to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      #- name: Install Node.js
      #  uses: actions/setup-node@v3
      #  with:
      #    node-version: 18

      # - name: Install pnpm
      #  uses: pnpm/action-setup@v2
      #  id: pnpm-install
      #  with:
      #    version: 7
      #    run_install: false

      #- name: Get pnpm store directory
      #  id: pnpm-cache
      #  shell: bash
      #  run: |
      #    echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      #- uses: actions/cache@v3
      #  with:
      # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
      #    path: |
      #      ${{ steps.pnpm-cache.outputs.STORE_PATH }}
      #      ${{ github.workspace }}/.next/cache
      # Generate a new cache whenever packages or source files change.
      #    key: |
      #      ${{ runner.os }}-nextjs
      #      ${{ runner.os }}-pnpm-store
      # If source files changed but packages didn't, rebuild from a prior cache.
      #    restore-keys: |
      #      ${{ runner.os }}-nextjs-
      #      ${{ runner.os }}-pnpm-store-

      #- name: Install dependencies
      #  run: pnpm install wrangler @cloudflare/next-on-pages

      - name: Building
        run: pnpm next-on-pages --experimental-minify

      # Run a build step here if your project requires

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: 1bed4e5b9ed9f9fa1788d5f4c798bdba
          projectName: profile
          directory: .vercel/output/static/
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
